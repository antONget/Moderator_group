from filter.filter_group import is_admin
from aiogram.types import Message, ChatPermissions
from aiogram.filters import Command, CommandObject
from aiogram import Bot, Router, F
from aiogram.enums.chat_member_status import ChatMemberStatus
from database import requests as rq
from database.models import User
from utils.error_handling import error_handler
import datetime
import logging
import asyncio

router = Router()
router.message.filter(F.chat.type != "private")


@router.message(Command("mute"))
@error_handler
async def process_command_mute(message: Message, command: CommandObject, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /mute
    /mute @username [—Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö, —Ü–∏—Ñ—Ä–æ–π] [–ø—Ä–∏—á–∏–Ω–∞]
    /mute [—Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö, —Ü–∏—Ñ—Ä–æ–π] [–ø—Ä–∏—á–∏–Ω–∞] - –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    :param message:
    :param command:
    :param bot:
    :return:
    """
    logging.info('process_command_mute')
    # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞
    if not await is_admin(message, bot):
        msg = await message.answer(text="–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –∫–∞–Ω–∞–ª–µ,"
                                        " –∞ –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º")
        await asyncio.sleep(5)
        await msg.delete()
        return
    # —Ñ–ª–∞–≥ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    reply_message = message.reply_to_message
    # –û–ñ–ò–î–ê–ï–ú –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: /mute [—Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö, —Ü–∏—Ñ—Ä–æ–π] [–ø—Ä–∏—á–∏–Ω–∞] - –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    if reply_message:
        arguments = command.args
        if not arguments:
            msg = await message.answer(
                '–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /mute —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å —Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö –∏ –ø–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ –æ–Ω–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è')
            await asyncio.sleep(5)
            await msg.delete()
            return
        else:
            list_arguments = arguments.split(' ', 1)
            if len(list_arguments) == 2:
                hour = list_arguments[0]
                if hour.isdigit():
                    hour_mute = int(hour)
                else:
                    msg = await message.answer(
                        text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ–º')
                    await asyncio.sleep(5)
                    await msg.delete()
                    return

                user_to_action = reply_message.from_user.id
                user: User = await rq.get_user_tg_id(tg_id=user_to_action)
                if user:
                    await mute_info_process(user_to_action=user_to_action,
                                            reason=list_arguments[1],
                                            message=message,
                                            hour_mute=hour_mute,
                                            bot=bot)
            else:
                msg = await message.answer(
                    text='–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /mute –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —É–∫–∞–∑–∞—Ç—å —Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö'
                         ' –∏ –ø—Ä–∏—á–∏–Ω—É –µ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /mute 5 –ü—Ä–∏—á–∏–Ω–∞')
                await asyncio.sleep(5)
                await msg.delete()
                return
    else:
        # –û–ñ–ò–î–ê–ï–ú –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: /mute @username [—Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö, —Ü–∏—Ñ—Ä–æ–π] [–ø—Ä–∏—á–∏–Ω–∞]
        arguments = command.args
        if not arguments:
            msg = await message.answer(text='–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /mute –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —É–∫–∞–∑–∞—Ç—å —Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö'
                                            ' –∏ –ø—Ä–∏—á–∏–Ω—É –µ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /mute 5 –ü—Ä–∏—á–∏–Ω–∞')
            await asyncio.sleep(5)
            await msg.delete()
            return
        list_arguments: list = arguments.split(' ', 2)
        if len(list_arguments) == 3:
            # –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if list_arguments[0].isdigit():
                user_to_action = int(list_arguments[0])
                user: User = await rq.get_user_tg_id(tg_id=user_to_action)
                if user:
                    if list_arguments[1].isdigit():
                        hour_mute = int(list_arguments[1])
                        await mute_info_process(user_to_action=user_to_action,
                                                reason=list_arguments[2],
                                                message=message,
                                                hour_mute=hour_mute,
                                                bot=bot)
                    else:
                        msg = await message.answer(
                            text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ–º')
                        await asyncio.sleep(5)
                        await msg.delete()
                        return
                else:
                    await message.answer(text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º id –Ω–µ –Ω–∞–π–¥–µ–Ω')
            else:
                username = list_arguments[0].replace('@', '')
                user: User = await rq.get_user_username(username=username)
                if user:
                    if list_arguments[1].isdigit():
                        hour_mute = int(list_arguments[1])
                        await mute_info_process(user_to_action=user.tg_id,
                                                reason=list_arguments[2],
                                                message=message,
                                                hour_mute=hour_mute,
                                                bot=bot)
                    else:
                        msg = await message.answer(
                            text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ–º')
                        await asyncio.sleep(5)
                        await msg.delete()
                        return

                else:
                    await message.answer(text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –Ω–µ –Ω–∞–π–¥–µ–Ω')
        else:
            await message.answer(text='–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /mute –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —É–∫–∞–∑–∞—Ç—å —Å—Ä–æ–∫ –≤ —á–∞—Å–∞—Ö'
                                      ' –∏ –ø—Ä–∏—á–∏–Ω—É –µ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /mute 5 –ü—Ä–∏—á–∏–Ω–∞')


async def mute_info_process(user_to_action: int, reason: str, message: Message, hour_mute: int, bot: Bot):
    """
    –ü—Ä–æ—Ü–µ—Å—Å –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã warn
    :param user_to_action:
    :param reason:
    :param message:
    :param hour_mute:
    :param bot:
    :return:
    """
    logging.info('warn_info_process')
    date_chat_action = datetime.datetime.today()
    date_chat_action = date_chat_action.strftime('%d-%m-%Y %H:%M')
    type_chat_action = 'mute'
    reason_chat_action = reason
    data_chat_action = {'tg_id': user_to_action,
                        'type_action': type_chat_action,
                        'data_action': date_chat_action,
                        'reason_action': reason_chat_action}
    await rq.add_chat_action(data=data_chat_action)
    user: User = await rq.get_user_tg_id(tg_id=user_to_action)
    only_read_permissions = ChatPermissions(can_send_messages=False,
                                            can_send_media_messages=False,
                                            can_send_polls=False,
                                            can_send_other_messages=False,
                                            can_add_web_page_previews=False,
                                            can_change_info=False,
                                            can_invite_users=False,
                                            can_pin_messages=False)
    member = await bot.get_chat_member(message.chat.id, message.from_user.id)
    if member in [ChatMemberStatus.CREATOR]:
        until_date = datetime.datetime.now() + datetime.timedelta(minutes=hour_mute)
        await bot.restrict_chat_member(chat_id=message.chat.id,
                                       user_id=user_to_action,
                                       permissions=ChatPermissions(can_send_messages=False),
                                       until_date=until_date)
        await message.answer(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={message.from_user.id}'>"
                             f"{message.from_user.full_name}</a> –∑–∞–º—É—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
                             f" <a href='tg://user?id={user_to_action}'>"
                             f"{user.nickname if user.nickname else user.username}</a> –Ω–∞ {hour_mute} —á–∞—Å–æ–≤ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}")
    else:
        await message.answer(f'üö´ –≠—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ–ª—å–∑—è –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π!')
